openapi: 3.0.0
info:
  title: momonga blog API
  version: 1.0.0
  description: momonga blog API
servers:
  - url: https://hogehogehogedummy.com
    description: Production server
  - url: http://localhost:8080
    description: Local server
paths:
  /login:
    post:
      tags:
        - admin
      summary: Admin login
      description: Admin login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
  /logout:
    post:
      tags:
        - admin
      summary: Admin logout
      description: Admin logout
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/NotContent'
        '400':
          $ref: '#/components/responses/BadRequest'
  /admin/blog:
    get:
      tags:
        - blog
      summary: Get blog list
      description: Get blog list
      operationId: getBlogList
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get blog list
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      blogs:
                        type: object
                      total:
                        type: integer
                        example: 1
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                    required:
                      - blogs
                      - total
                      - page
                      - limit
                  error:
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        user_id:
          type: string
          description: User ID
        password:
          type: string
          description: Password
    LoginResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: object
          properties:
            token:
              type: string
              description: JWT token
            refreshToken:
              type: string
              description: Refresh token
          required:
            - token
            - refreshToken
        error:
          type: object
  responses:
    LoginSuccess:
      description: Admin login response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              data:
                type: object
              error:
                type: object
                properties:
                  message:
                    type: string
                    example: Bad Request
    NotContent:
      description: NotContent Request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              data:
                type: object
              error:
                type: object
